// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/analysis/therapy": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get analysis of active therapies with alerts for expiring or overdue therapies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analysis"
                ],
                "summary": "Get therapy analysis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.TherapyAnalysis"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/analysis/weight": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get analysis of hedgehog weight trends and alerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analysis"
                ],
                "summary": "Get weight analysis",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.WeightAnalysis"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/areas": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all areas with their rooms and hedgehogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Areas"
                ],
                "summary": "Get all areas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Area"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new area record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Areas"
                ],
                "summary": "Create new area",
                "parameters": [
                    {
                        "description": "Area data",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Area"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Area"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/areas/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing area's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Areas"
                ],
                "summary": "Update area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated area data",
                        "name": "area",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Area"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Area"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an area by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Areas"
                ],
                "summary": "Delete area",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Area ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/export/{dataType}/{format}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export data in various formats (PDF, Excel, CSV)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/pdf",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "text/csv"
                ],
                "tags": [
                    "Export"
                ],
                "summary": "Quick export data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date filter (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date filter (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status filter",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Room ID filter",
                        "name": "room_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exported file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/hedgehogs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all hedgehogs with their areas and relationships",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedgehogs"
                ],
                "summary": "Get all hedgehogs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Hedgehog"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new hedgehog record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedgehogs"
                ],
                "summary": "Create new hedgehog",
                "parameters": [
                    {
                        "description": "Hedgehog data",
                        "name": "hedgehog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Hedgehog"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Hedgehog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/hedgehogs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a single hedgehog by its ID with related data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedgehogs"
                ],
                "summary": "Get hedgehog by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hedgehog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Hedgehog"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing hedgehog's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedgehogs"
                ],
                "summary": "Update hedgehog",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hedgehog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated hedgehog data",
                        "name": "hedgehog",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Hedgehog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Hedgehog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a hedgehog by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hedgehogs"
                ],
                "summary": "Delete hedgehog",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hedgehog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notification-settings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current notification settings for the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Get notification settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.NotificationSettings"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the notification settings for the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "Update notification settings",
                "parameters": [
                    {
                        "description": "Notification settings",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.NotificationSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.NotificationSettings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of notifications with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notifications",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter by unread status",
                        "name": "unread",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by notification type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Notification"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get statistics about notifications (counts by status, priority, and type)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Dismiss a notification by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Dismiss notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{id}/read": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark a notification as read by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Notification"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all rooms with their areas and hedgehogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Get all rooms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Room"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new room record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Create new room",
                "parameters": [
                    {
                        "description": "Room data",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Room"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a single room by its ID with related areas and hedgehogs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Get room by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Room"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing room's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Update room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated room data",
                        "name": "room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Room"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a room by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Delete room",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Room ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/therapies": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of all therapies with optional hedgehog_id filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Therapies"
                ],
                "summary": "Get all therapies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by hedgehog ID",
                        "name": "hedgehog_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Therapy"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new therapy record for a hedgehog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Therapies"
                ],
                "summary": "Create new therapy",
                "parameters": [
                    {
                        "description": "Therapy data",
                        "name": "therapy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Therapy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Therapy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/therapies/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing therapy's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Therapies"
                ],
                "summary": "Update therapy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Therapy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated therapy data",
                        "name": "therapy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Therapy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Therapy"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a therapy by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Therapies"
                ],
                "summary": "Delete therapy",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Therapy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/weight-records": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get weight records with optional hedgehog_id filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weight Records"
                ],
                "summary": "Get weight records",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by hedgehog ID",
                        "name": "hedgehog_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Limit results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.WeightRecord"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add new weight record for a hedgehog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weight Records"
                ],
                "summary": "Create weight record",
                "parameters": [
                    {
                        "description": "Weight record data",
                        "name": "weight_record",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.WeightRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.WeightRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/weight-records/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing weight record's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weight Records"
                ],
                "summary": "Update weight record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Weight Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated weight record data",
                        "name": "weight_record",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.WeightRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.WeightRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a weight record by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Weight Records"
                ],
                "summary": "Delete weight record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Weight Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Area": {
            "description": "A specific area within a room where hedgehogs are housed",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "hedgehogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Hedgehog"
                    }
                },
                "height": {
                    "type": "number",
                    "minimum": 1,
                    "example": 80
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "max_capacity": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 2
                },
                "name": {
                    "type": "string",
                    "example": "Gabbia 1"
                },
                "room": {
                    "$ref": "#/definitions/main.Room"
                },
                "room_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "width": {
                    "type": "number",
                    "minimum": 1,
                    "example": 100
                },
                "x": {
                    "type": "number",
                    "minimum": 0,
                    "example": 10
                },
                "y": {
                    "type": "number",
                    "minimum": 0,
                    "example": 20
                }
            }
        },
        "main.Hedgehog": {
            "description": "Information about a hedgehog in the rescue center",
            "type": "object",
            "properties": {
                "area": {
                    "$ref": "#/definitions/main.Area"
                },
                "area_id": {
                    "type": "integer",
                    "example": 1
                },
                "arrival_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Riccio trovato nel giardino"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Spillo"
                },
                "release_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-07-28T10:30:00Z"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "in_care",
                        "recovered",
                        "deceased",
                    ],
                    "example": "in_care"
                },
                "therapies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Therapy"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "weight_records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.WeightRecord"
                    }
                }
            }
        },
        "main.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "admin123"
                },
                "username": {
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "main.Notification": {
            "description": "A notification generated by the system to alert users about important events",
            "type": "object",
            "properties": {
                "action_label": {
                    "type": "string",
                    "example": "Gestisci Terapia"
                },
                "action_url": {
                    "type": "string",
                    "example": "/hedgehogs/1"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "data": {
                    "type": "string",
                    "example": "{\"days_overdue\": 5}"
                },
                "dismissed": {
                    "type": "boolean",
                    "example": false
                },
                "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-02-15T10:30:00Z"
                },
                "hedgehog": {
                    "$ref": "#/definitions/main.Hedgehog"
                },
                "hedgehog_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "message": {
                    "type": "string",
                    "example": "La terapia 'Antibiotico' per Spillo è scaduta il 15/01/2024"
                },
                "priority": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.NotificationPriority"
                        }
                    ],
                    "example": "high"
                },
                "read": {
                    "type": "boolean",
                    "example": false
                },
                "therapy": {
                    "$ref": "#/definitions/main.Therapy"
                },
                "therapy_id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "Terapia Scaduta"
                },
                "type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.NotificationType"
                        }
                    ],
                    "example": "therapy_expired"
                }
            }
        },
        "main.NotificationPriority": {
            "description": "Priority level for notifications",
            "type": "string",
            "enum": [
                "low",
                "medium",
                "high",
                "critical"
            ],
            "x-enum-comments": {
                "PriorityCritical": "Urgent notifications requiring immediate attention",
                "PriorityHigh": "Important notifications",
                "PriorityLow": "Informational notifications",
                "PriorityMedium": "Standard notifications"
            },
            "x-enum-descriptions": [
                "Informational notifications",
                "Standard notifications",
                "Important notifications",
                "Urgent notifications requiring immediate attention"
            ],
            "x-enum-varnames": [
                "PriorityLow",
                "PriorityMedium",
                "PriorityHigh",
                "PriorityCritical"
            ]
        },
        "main.NotificationSettings": {
            "description": "Configuration settings for the notification system",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "email_address": {
                    "type": "string",
                    "example": "admin@laninna.org"
                },
                "email_notifications_enabled": {
                    "type": "boolean",
                    "example": false
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "no_weighing_days": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 7
                },
                "therapy_expired_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "therapy_expiring_days": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 3
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "webhook_url": {
                    "type": "string",
                    "example": "https://hooks.slack.com/services/xxx"
                },
                "weight_drop_days": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 7
                },
                "weight_drop_threshold": {
                    "type": "number",
                    "minimum": 1,
                    "example": 50
                },
                "weight_stagnation_days": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 14
                }
            }
        },
        "main.NotificationType": {
            "description": "Type of notification that can be generated by the system",
            "type": "string",
            "enum": [
                "therapy_expired",
                "therapy_expiring",
                "weight_drop",
                "weight_stagnation",
                "no_weighing",
                "hedgehog_recovered",
                "system_alert"
            ],
            "x-enum-comments": {
                "NotificationHedgehogRecovered": "When a hedgehog has recovered and can be released",
                "NotificationNoWeighing": "When a hedgehog hasn't been weighed recently",
                "NotificationSystemAlert": "System-level alerts",
                "NotificationTherapyExpired": "When a therapy has passed its end date",
                "NotificationTherapyExpiring": "When a therapy is about to expire",
                "NotificationWeightDrop": "When a hedgehog has lost significant weight",
                "NotificationWeightStagnation": "When a hedgehog's weight hasn't changed for a period"
            },
            "x-enum-descriptions": [
                "When a therapy has passed its end date",
                "When a therapy is about to expire",
                "When a hedgehog has lost significant weight",
                "When a hedgehog's weight hasn't changed for a period",
                "When a hedgehog hasn't been weighed recently",
                "When a hedgehog has recovered and can be released",
                "System-level alerts"
            ],
            "x-enum-varnames": [
                "NotificationTherapyExpired",
                "NotificationTherapyExpiring",
                "NotificationWeightDrop",
                "NotificationWeightStagnation",
                "NotificationNoWeighing",
                "NotificationHedgehogRecovered",
                "NotificationSystemAlert"
            ]
        },
        "main.Room": {
            "description": "A physical room in the rescue center that contains areas for hedgehogs",
            "type": "object",
            "properties": {
                "areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Area"
                    }
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Stanza principale con gabbie e aree di recupero"
                },
                "height": {
                    "type": "number",
                    "minimum": 1,
                    "example": 400
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Sala Principale"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "width": {
                    "type": "number",
                    "minimum": 1,
                    "example": 500
                }
            }
        },
        "main.Therapy": {
            "description": "A medical treatment or therapy administered to a hedgehog",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Somministrazione di antibiotico per infezione"
                },
                "end_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-30T10:30:00Z"
                },
                "hedgehog_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Antibiotico"
                },
                "start_date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "completed",
                        "suspended"
                    ],
                    "example": "active"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                }
            }
        },
        "main.TherapyAnalysis": {
            "type": "object",
            "properties": {
                "alert": {
                    "type": "boolean"
                },
                "alert_reason": {
                    "type": "string"
                },
                "days_active": {
                    "type": "integer"
                },
                "days_until_end": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "hedgehog_id": {
                    "type": "integer"
                },
                "hedgehog_name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "therapy_id": {
                    "type": "integer"
                },
                "therapy_name": {
                    "type": "string"
                }
            }
        },
        "main.TokenResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "integer",
                    "example": 1640995200
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "main.WeightAnalysis": {
            "type": "object",
            "properties": {
                "alert": {
                    "type": "boolean"
                },
                "alert_reason": {
                    "type": "string"
                },
                "current_weight": {
                    "type": "number"
                },
                "days_since_weigh": {
                    "type": "integer"
                },
                "hedgehog_id": {
                    "type": "integer"
                },
                "hedgehog_name": {
                    "type": "string"
                },
                "last_weigh_date": {
                    "type": "string"
                },
                "previous_weight": {
                    "type": "number"
                },
                "trend": {
                    "description": "\"improving\", \"stable\", \"declining\", \"critical\"",
                    "type": "string"
                },
                "weight_change": {
                    "type": "number"
                }
            }
        },
        "main.WeightRecord": {
            "description": "A record of a hedgehog's weight measurement",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "hedgehog_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "notes": {
                    "type": "string",
                    "example": "Peso stabile"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-01-15T10:30:00Z"
                },
                "weight": {
                    "type": "number",
                    "minimum": 1,
                    "example": 450.5
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "La Ninna - Hedgehog Management API",
	Description:      "API for managing hedgehog rescue center operations",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
