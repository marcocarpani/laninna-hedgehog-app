basePath: /api
definitions:
  main.Area:
    description: A specific area within a room where hedgehogs are housed
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      hedgehogs:
        items:
          $ref: '#/definitions/main.Hedgehog'
        type: array
      height:
        example: 80
        minimum: 1
        type: number
      id:
        example: 1
        type: integer
      max_capacity:
        example: 2
        minimum: 1
        type: integer
      name:
        example: Gabbia 1
        type: string
      room:
        $ref: '#/definitions/main.Room'
      room_id:
        example: 1
        type: integer
      updated_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      width:
        example: 100
        minimum: 1
        type: number
      x:
        example: 10
        minimum: 0
        type: number
      "y":
        example: 20
        minimum: 0
        type: number
    type: object
  main.Hedgehog:
    description: Information about a hedgehog in the rescue center
    properties:
      area:
        $ref: '#/definitions/main.Area'
      area_id:
        example: 1
        type: integer
      arrival_date:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      created_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      description:
        example: Riccio trovato nel giardino
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Spillo
        type: string
      release_date:
        example: "2024-07-28T10:30:00Z"
        format: date-time
        type: string
      status:
        enum:
        - in_care
        - recovered
        - deceased
        - released
        example: in_care
        type: string
      therapies:
        items:
          $ref: '#/definitions/main.Therapy'
        type: array
      updated_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      weight_records:
        items:
          $ref: '#/definitions/main.WeightRecord'
        type: array
    type: object
  main.LoginRequest:
    properties:
      password:
        example: admin123
        type: string
      username:
        example: admin
        type: string
    required:
    - password
    - username
    type: object
  main.Notification:
    description: A notification generated by the system to alert users about important
      events
    properties:
      action_label:
        example: Gestisci Terapia
        type: string
      action_url:
        example: /hedgehogs/1
        type: string
      created_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      data:
        example: '{"days_overdue": 5}'
        type: string
      dismissed:
        example: false
        type: boolean
      expires_at:
        example: "2024-02-15T10:30:00Z"
        format: date-time
        type: string
      hedgehog:
        $ref: '#/definitions/main.Hedgehog'
      hedgehog_id:
        example: 1
        type: integer
      id:
        example: 1
        type: integer
      message:
        example: La terapia 'Antibiotico' per Spillo Ã¨ scaduta il 15/01/2024
        type: string
      priority:
        allOf:
        - $ref: '#/definitions/main.NotificationPriority'
        example: high
      read:
        example: false
        type: boolean
      therapy:
        $ref: '#/definitions/main.Therapy'
      therapy_id:
        example: 1
        type: integer
      title:
        example: Terapia Scaduta
        type: string
      type:
        allOf:
        - $ref: '#/definitions/main.NotificationType'
        example: therapy_expired
    type: object
  main.NotificationPriority:
    description: Priority level for notifications
    enum:
    - low
    - medium
    - high
    - critical
    type: string
    x-enum-comments:
      PriorityCritical: Urgent notifications requiring immediate attention
      PriorityHigh: Important notifications
      PriorityLow: Informational notifications
      PriorityMedium: Standard notifications
    x-enum-descriptions:
    - Informational notifications
    - Standard notifications
    - Important notifications
    - Urgent notifications requiring immediate attention
    x-enum-varnames:
    - PriorityLow
    - PriorityMedium
    - PriorityHigh
    - PriorityCritical
  main.NotificationSettings:
    description: Configuration settings for the notification system
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      email_address:
        example: admin@laninna.org
        type: string
      email_notifications_enabled:
        example: false
        type: boolean
      id:
        example: 1
        type: integer
      no_weighing_days:
        example: 7
        minimum: 1
        type: integer
      therapy_expired_enabled:
        example: true
        type: boolean
      therapy_expiring_days:
        example: 3
        minimum: 1
        type: integer
      updated_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      webhook_url:
        example: https://hooks.slack.com/services/xxx
        type: string
      weight_drop_days:
        example: 7
        minimum: 1
        type: integer
      weight_drop_threshold:
        example: 50
        minimum: 1
        type: number
      weight_stagnation_days:
        example: 14
        minimum: 1
        type: integer
    type: object
  main.NotificationType:
    description: Type of notification that can be generated by the system
    enum:
    - therapy_expired
    - therapy_expiring
    - weight_drop
    - weight_stagnation
    - no_weighing
    - hedgehog_recovered
    - system_alert
    type: string
    x-enum-comments:
      NotificationHedgehogRecovered: When a hedgehog has recovered and can be released
      NotificationNoWeighing: When a hedgehog hasn't been weighed recently
      NotificationSystemAlert: System-level alerts
      NotificationTherapyExpired: When a therapy has passed its end date
      NotificationTherapyExpiring: When a therapy is about to expire
      NotificationWeightDrop: When a hedgehog has lost significant weight
      NotificationWeightStagnation: When a hedgehog's weight hasn't changed for a
        period
    x-enum-descriptions:
    - When a therapy has passed its end date
    - When a therapy is about to expire
    - When a hedgehog has lost significant weight
    - When a hedgehog's weight hasn't changed for a period
    - When a hedgehog hasn't been weighed recently
    - When a hedgehog has recovered and can be released
    - System-level alerts
    x-enum-varnames:
    - NotificationTherapyExpired
    - NotificationTherapyExpiring
    - NotificationWeightDrop
    - NotificationWeightStagnation
    - NotificationNoWeighing
    - NotificationHedgehogRecovered
    - NotificationSystemAlert
  main.Room:
    description: A physical room in the rescue center that contains areas for hedgehogs
    properties:
      areas:
        items:
          $ref: '#/definitions/main.Area'
        type: array
      created_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      description:
        example: Stanza principale con gabbie e aree di recupero
        type: string
      height:
        example: 400
        minimum: 1
        type: number
      id:
        example: 1
        type: integer
      name:
        example: Sala Principale
        type: string
      updated_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      width:
        example: 500
        minimum: 1
        type: number
    type: object
  main.Therapy:
    description: A medical treatment or therapy administered to a hedgehog
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      description:
        example: Somministrazione di antibiotico per infezione
        type: string
      end_date:
        example: "2024-01-30T10:30:00Z"
        format: date-time
        type: string
      hedgehog_id:
        example: 1
        type: integer
      id:
        example: 1
        type: integer
      name:
        example: Antibiotico
        type: string
      start_date:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      status:
        enum:
        - active
        - completed
        - suspended
        example: active
        type: string
      updated_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
    type: object
  main.TherapyAnalysis:
    properties:
      alert:
        type: boolean
      alert_reason:
        type: string
      days_active:
        type: integer
      days_until_end:
        type: integer
      end_date:
        type: string
      hedgehog_id:
        type: integer
      hedgehog_name:
        type: string
      start_date:
        type: string
      status:
        type: string
      therapy_id:
        type: integer
      therapy_name:
        type: string
    type: object
  main.TokenResponse:
    properties:
      expires_at:
        example: 1640995200
        type: integer
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  main.WeightAnalysis:
    properties:
      alert:
        type: boolean
      alert_reason:
        type: string
      current_weight:
        type: number
      days_since_weigh:
        type: integer
      hedgehog_id:
        type: integer
      hedgehog_name:
        type: string
      last_weigh_date:
        type: string
      previous_weight:
        type: number
      trend:
        description: '"improving", "stable", "declining", "critical"'
        type: string
      weight_change:
        type: number
    type: object
  main.WeightRecord:
    description: A record of a hedgehog's weight measurement
    properties:
      created_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      date:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      hedgehog_id:
        example: 1
        type: integer
      id:
        example: 1
        type: integer
      notes:
        example: Peso stabile
        type: string
      updated_at:
        example: "2024-01-15T10:30:00Z"
        format: date-time
        type: string
      weight:
        example: 450.5
        minimum: 1
        type: number
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API for managing hedgehog rescue center operations
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: La Ninna - Hedgehog Management API
  version: "1.0"
paths:
  /analysis/therapy:
    get:
      consumes:
      - application/json
      description: Get analysis of active therapies with alerts for expiring or overdue
        therapies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.TherapyAnalysis'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get therapy analysis
      tags:
      - Analysis
  /analysis/weight:
    get:
      consumes:
      - application/json
      description: Get analysis of hedgehog weight trends and alerts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.WeightAnalysis'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get weight analysis
      tags:
      - Analysis
  /areas:
    get:
      consumes:
      - application/json
      description: Get list of all areas with their rooms and hedgehogs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Area'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all areas
      tags:
      - Areas
    post:
      consumes:
      - application/json
      description: Create a new area record
      parameters:
      - description: Area data
        in: body
        name: area
        required: true
        schema:
          $ref: '#/definitions/main.Area'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Area'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create new area
      tags:
      - Areas
  /areas/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an area by its ID
      parameters:
      - description: Area ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete area
      tags:
      - Areas
    put:
      consumes:
      - application/json
      description: Update an existing area's information
      parameters:
      - description: Area ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated area data
        in: body
        name: area
        required: true
        schema:
          $ref: '#/definitions/main.Area'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Area'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update area
      tags:
      - Areas
  /export/{dataType}/{format}:
    get:
      consumes:
      - application/json
      description: Export data in various formats (PDF, Excel, CSV)
      parameters:
      - description: Start date filter (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: End date filter (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: Status filter
        in: query
        name: status
        type: string
      - description: Room ID filter
        in: query
        name: room_id
        type: integer
      produces:
      - application/pdf
      - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
      - text/csv
      responses:
        "200":
          description: Exported file
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Quick export data
      tags:
      - Export
  /hedgehogs:
    get:
      consumes:
      - application/json
      description: Get list of all hedgehogs with their areas and relationships
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Hedgehog'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all hedgehogs
      tags:
      - Hedgehogs
    post:
      consumes:
      - application/json
      description: Create a new hedgehog record
      parameters:
      - description: Hedgehog data
        in: body
        name: hedgehog
        required: true
        schema:
          $ref: '#/definitions/main.Hedgehog'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Hedgehog'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create new hedgehog
      tags:
      - Hedgehogs
  /hedgehogs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a hedgehog by its ID
      parameters:
      - description: Hedgehog ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete hedgehog
      tags:
      - Hedgehogs
    get:
      consumes:
      - application/json
      description: Get a single hedgehog by its ID with related data
      parameters:
      - description: Hedgehog ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Hedgehog'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get hedgehog by ID
      tags:
      - Hedgehogs
    put:
      consumes:
      - application/json
      description: Update an existing hedgehog's information
      parameters:
      - description: Hedgehog ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated hedgehog data
        in: body
        name: hedgehog
        required: true
        schema:
          $ref: '#/definitions/main.Hedgehog'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Hedgehog'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update hedgehog
      tags:
      - Hedgehogs
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/main.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.TokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - Authentication
  /notification-settings:
    get:
      consumes:
      - application/json
      description: Get the current notification settings for the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.NotificationSettings'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get notification settings
      tags:
      - Settings
    put:
      consumes:
      - application/json
      description: Update the notification settings for the system
      parameters:
      - description: Notification settings
        in: body
        name: settings
        required: true
        schema:
          $ref: '#/definitions/main.NotificationSettings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.NotificationSettings'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update notification settings
      tags:
      - Settings
  /notifications:
    get:
      consumes:
      - application/json
      description: Get list of notifications with optional filters
      parameters:
      - description: Filter by unread status
        in: query
        name: unread
        type: boolean
      - description: Filter by priority
        in: query
        name: priority
        type: string
      - description: Filter by notification type
        in: query
        name: type
        type: string
      - default: 50
        description: Limit results
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Notification'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get notifications
      tags:
      - Notifications
  /notifications/{id}:
    delete:
      consumes:
      - application/json
      description: Dismiss a notification by its ID
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Dismiss notification
      tags:
      - Notifications
  /notifications/{id}/read:
    put:
      consumes:
      - application/json
      description: Mark a notification as read by its ID
      parameters:
      - description: Notification ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Notification'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Mark notification as read
      tags:
      - Notifications
  /notifications/stats:
    get:
      consumes:
      - application/json
      description: Get statistics about notifications (counts by status, priority,
        and type)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get notification statistics
      tags:
      - Notifications
  /rooms:
    get:
      consumes:
      - application/json
      description: Get list of all rooms with their areas and hedgehogs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Room'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all rooms
      tags:
      - Rooms
    post:
      consumes:
      - application/json
      description: Create a new room record
      parameters:
      - description: Room data
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/main.Room'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Room'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create new room
      tags:
      - Rooms
  /rooms/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a room by its ID
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete room
      tags:
      - Rooms
    get:
      consumes:
      - application/json
      description: Get a single room by its ID with related areas and hedgehogs
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Room'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get room by ID
      tags:
      - Rooms
    put:
      consumes:
      - application/json
      description: Update an existing room's information
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated room data
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/main.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Room'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update room
      tags:
      - Rooms
  /therapies:
    get:
      consumes:
      - application/json
      description: Get list of all therapies with optional hedgehog_id filter
      parameters:
      - description: Filter by hedgehog ID
        in: query
        name: hedgehog_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Therapy'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all therapies
      tags:
      - Therapies
    post:
      consumes:
      - application/json
      description: Create a new therapy record for a hedgehog
      parameters:
      - description: Therapy data
        in: body
        name: therapy
        required: true
        schema:
          $ref: '#/definitions/main.Therapy'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Therapy'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create new therapy
      tags:
      - Therapies
  /therapies/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a therapy by its ID
      parameters:
      - description: Therapy ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete therapy
      tags:
      - Therapies
    put:
      consumes:
      - application/json
      description: Update an existing therapy's information
      parameters:
      - description: Therapy ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated therapy data
        in: body
        name: therapy
        required: true
        schema:
          $ref: '#/definitions/main.Therapy'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Therapy'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update therapy
      tags:
      - Therapies
  /weight-records:
    get:
      consumes:
      - application/json
      description: Get weight records with optional hedgehog_id filter
      parameters:
      - description: Filter by hedgehog ID
        in: query
        name: hedgehog_id
        type: integer
      - default: 100
        description: Limit results
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.WeightRecord'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get weight records
      tags:
      - Weight Records
    post:
      consumes:
      - application/json
      description: Add new weight record for a hedgehog
      parameters:
      - description: Weight record data
        in: body
        name: weight_record
        required: true
        schema:
          $ref: '#/definitions/main.WeightRecord'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.WeightRecord'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create weight record
      tags:
      - Weight Records
  /weight-records/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a weight record by its ID
      parameters:
      - description: Weight Record ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete weight record
      tags:
      - Weight Records
    put:
      consumes:
      - application/json
      description: Update an existing weight record's information
      parameters:
      - description: Weight Record ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated weight record data
        in: body
        name: weight_record
        required: true
        schema:
          $ref: '#/definitions/main.WeightRecord'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.WeightRecord'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update weight record
      tags:
      - Weight Records
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
